{"name": "test_devide[-1-param cant null]", "status": "broken", "statusDetails": {"message": "TypeError: unsupported operand type(s) for /: 'str' and 'int'", "trace": "self = <case.test_calculator.TestCaculator object at 0x7fafa8044250>, a = '', b = 1, exc_data = 'param cant null'\n\n    @pytest.mark.run(order=4)\n    @pytest.mark.parametrize('a,b,exc_data',get_case_data()[3])\n    def test_devide(self,a,b,exc_data):\n        print(\"除法\")\n>       assert self.cal.devide(a, b) == exc_data\n\ncase/test_calculator.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.caculator.caculator object at 0x7fafc8d0ffa0>, a = '', b = 1\n\n    def devide(self,a,b):\n        '''除法'''\n>       return a/b\nE       TypeError: unsupported operand type(s) for /: 'str' and 'int'\n\nsrc/caculator.py:16: TypeError"}, "attachments": [{"name": "stdout", "source": "05f42204-0813-4e27-ac03-b359a0f270d1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "a", "value": "''"}, {"name": "b", "value": "1"}, {"name": "exc_data", "value": "'param cant null'"}], "start": 1610180704460, "stop": 1610180704460, "uuid": "4592caad-a532-4b25-b256-98fc630a2e3c", "historyId": "823f5ba0884ca4481e459b16e3cea373", "testCaseId": "1e632c252c10704ff5f3847c2e2f580f", "fullName": "case.test_calculator.TestCaculator#test_devide", "labels": [{"name": "tag", "value": "run(order=4)"}, {"name": "parentSuite", "value": "case"}, {"name": "suite", "value": "test_calculator"}, {"name": "subSuite", "value": "TestCaculator"}, {"name": "host", "value": "alice-xiaodeMacBook-Pro.local"}, {"name": "thread", "value": "2408-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.test_calculator"}]}