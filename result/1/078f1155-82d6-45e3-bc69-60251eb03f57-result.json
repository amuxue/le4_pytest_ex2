{"name": "test_multipy[None-None-param cant None]", "status": "broken", "statusDetails": {"message": "TypeError: can't multiply sequence by non-int of type 'str'", "trace": "self = <case.test_calculator.TestCaculator object at 0x7fafa80131f0>, a = 'None', b = 'None', exc_data = 'param cant None'\n\n    @pytest.mark.run(order=3)\n    @pytest.mark.parametrize('a,b,exc_data',get_case_data()[2])\n    def test_multipy(self,a,b,exc_data):\n        print(\"乘法\")\n>       assert self.cal.multipy(a, b) == exc_data\n\ncase/test_calculator.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.caculator.caculator object at 0x7fafc8d0ffa0>, a = 'None', b = 'None'\n\n    def multipy(self,a,b):\n        '''乘法'''\n>       return a*b\nE       TypeError: can't multiply sequence by non-int of type 'str'\n\nsrc/caculator.py:12: TypeError"}, "attachments": [{"name": "stdout", "source": "9094124f-fafa-4b28-b1c9-4892877e91cb-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "a", "value": "'None'"}, {"name": "b", "value": "'None'"}, {"name": "exc_data", "value": "'param cant None'"}], "start": 1610180704445, "stop": 1610180704445, "uuid": "e67de666-0cb9-40c0-ac4a-851fdd578da6", "historyId": "14f56854cb6e97b74671221a136314c7", "testCaseId": "9ffdd1de683fbbd8b25b6e4b24498560", "fullName": "case.test_calculator.TestCaculator#test_multipy", "labels": [{"name": "tag", "value": "run(order=3)"}, {"name": "parentSuite", "value": "case"}, {"name": "suite", "value": "test_calculator"}, {"name": "subSuite", "value": "TestCaculator"}, {"name": "host", "value": "alice-xiaodeMacBook-Pro.local"}, {"name": "thread", "value": "2408-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.test_calculator"}]}