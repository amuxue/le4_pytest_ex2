{"name": "test_devide[None-None-param cant None]", "status": "broken", "statusDetails": {"message": "TypeError: unsupported operand type(s) for /: 'str' and 'str'", "trace": "self = <case.test_calculator.TestCaculator object at 0x7f881020aac0>, a = 'None', b = 'None', exc_data = 'param cant None'\n\n    @pytest.mark.run(order=4)\n    @pytest.mark.parametrize('a,b,exc_data',get_case_data()[3])\n    def test_devide(self,a,b,exc_data):\n        print(\"除法\")\n>       assert self.cal.devide(a, b) == exc_data\n\ncase/test_calculator.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.caculator.caculator object at 0x7f8830a9f460>, a = 'None', b = 'None'\n\n    def devide(self,a,b):\n        '''除法'''\n>       return a/b\nE       TypeError: unsupported operand type(s) for /: 'str' and 'str'\n\nsrc/caculator.py:16: TypeError"}, "attachments": [{"name": "stdout", "source": "028c4272-adf2-435f-9e53-4619f6b9c4d3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "a", "value": "'None'"}, {"name": "b", "value": "'None'"}, {"name": "exc_data", "value": "'param cant None'"}], "start": 1610180854751, "stop": 1610180854751, "uuid": "1e97f685-30f8-49ac-aeed-a82190e43363", "historyId": "eabe88db43909e4536e332d6e87f2ba8", "testCaseId": "1e632c252c10704ff5f3847c2e2f580f", "fullName": "case.test_calculator.TestCaculator#test_devide", "labels": [{"name": "feature", "value": "测试计算类"}, {"name": "tag", "value": "run(order=4)"}, {"name": "parentSuite", "value": "case"}, {"name": "suite", "value": "test_calculator"}, {"name": "subSuite", "value": "TestCaculator"}, {"name": "host", "value": "alice-xiaodeMacBook-Pro.local"}, {"name": "thread", "value": "2460-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.test_calculator"}]}